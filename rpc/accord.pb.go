// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/accord.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_OK   Status = 0
	Status_DONE Status = 1
	Status_HELD Status = 2
)

var Status_name = map[int32]string{
	0: "OK",
	1: "DONE",
	2: "HELD",
}

var Status_value = map[string]int32{
	"OK":   0,
	"DONE": 1,
	"HELD": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{0}
}

type ListRequest_Filter_Status int32

const (
	ListRequest_Filter_ALL     ListRequest_Filter_Status = 0
	ListRequest_Filter_DONE    ListRequest_Filter_Status = 1
	ListRequest_Filter_PENDING ListRequest_Filter_Status = 2
)

var ListRequest_Filter_Status_name = map[int32]string{
	0: "ALL",
	1: "DONE",
	2: "PENDING",
}

var ListRequest_Filter_Status_value = map[string]int32{
	"ALL":     0,
	"DONE":    1,
	"PENDING": 2,
}

func (x ListRequest_Filter_Status) String() string {
	return proto.EnumName(ListRequest_Filter_Status_name, int32(x))
}

func (ListRequest_Filter_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{7, 0, 0}
}

// Handle
type Handle struct {
	// Handle ID
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Resource name/identifier, unique within namespace.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Custom namespace.
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Expiration UNIX timestamp (millisecond precision)
	ExpTms int64 `protobuf:"varint,4,opt,name=exp_tms,json=expTms,proto3" json:"exp_tms,omitempty"`
	// Done at UNIX timestamp (millisecond precision)
	DoneTms int64 `protobuf:"varint,5,opt,name=done_tms,json=doneTms,proto3" json:"done_tms,omitempty"`
	// Describes the number of times this handle has been acquired.
	NumAcquired uint32 `protobuf:"varint,6,opt,name=num_acquired,json=numAcquired,proto3" json:"num_acquired,omitempty"`
	// Metadata.
	Metadata             map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Handle) Reset()         { *m = Handle{} }
func (m *Handle) String() string { return proto.CompactTextString(m) }
func (*Handle) ProtoMessage()    {}
func (*Handle) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{0}
}

func (m *Handle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Handle.Unmarshal(m, b)
}
func (m *Handle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Handle.Marshal(b, m, deterministic)
}
func (m *Handle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Handle.Merge(m, src)
}
func (m *Handle) XXX_Size() int {
	return xxx_messageInfo_Handle.Size(m)
}
func (m *Handle) XXX_DiscardUnknown() {
	xxx_messageInfo_Handle.DiscardUnknown(m)
}

var xxx_messageInfo_Handle proto.InternalMessageInfo

func (m *Handle) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Handle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Handle) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Handle) GetExpTms() int64 {
	if m != nil {
		return m.ExpTms
	}
	return 0
}

func (m *Handle) GetDoneTms() int64 {
	if m != nil {
		return m.DoneTms
	}
	return 0
}

func (m *Handle) GetNumAcquired() uint32 {
	if m != nil {
		return m.NumAcquired
	}
	return 0
}

func (m *Handle) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type AcquireRequest struct {
	// Owner identifier
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Resource name/identifier.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Custom namespace.
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// TTL the maximum life-span of the acquired resource (in seconds).
	Ttl uint32 `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// Custom, optional metadata.
	Metadata             map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AcquireRequest) Reset()         { *m = AcquireRequest{} }
func (m *AcquireRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireRequest) ProtoMessage()    {}
func (*AcquireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{1}
}

func (m *AcquireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireRequest.Unmarshal(m, b)
}
func (m *AcquireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireRequest.Marshal(b, m, deterministic)
}
func (m *AcquireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireRequest.Merge(m, src)
}
func (m *AcquireRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireRequest.Size(m)
}
func (m *AcquireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireRequest proto.InternalMessageInfo

func (m *AcquireRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *AcquireRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AcquireRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *AcquireRequest) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *AcquireRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type AcquireResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=blacksquaremedia.accord.Status" json:"status,omitempty"`
	Handle               *Handle  `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireResponse) Reset()         { *m = AcquireResponse{} }
func (m *AcquireResponse) String() string { return proto.CompactTextString(m) }
func (*AcquireResponse) ProtoMessage()    {}
func (*AcquireResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{2}
}

func (m *AcquireResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireResponse.Unmarshal(m, b)
}
func (m *AcquireResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireResponse.Marshal(b, m, deterministic)
}
func (m *AcquireResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireResponse.Merge(m, src)
}
func (m *AcquireResponse) XXX_Size() int {
	return xxx_messageInfo_AcquireResponse.Size(m)
}
func (m *AcquireResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireResponse proto.InternalMessageInfo

func (m *AcquireResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

func (m *AcquireResponse) GetHandle() *Handle {
	if m != nil {
		return m.Handle
	}
	return nil
}

type RenewRequest struct {
	// Owner identifier.
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Handle identifier.
	HandleId []byte `protobuf:"bytes,2,opt,name=handle_id,json=handleId,proto3" json:"handle_id,omitempty"`
	// TTL the maximum life-span of the acquired resource (in seconds).
	Ttl uint32 `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// Optional metadata.
	Metadata             map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RenewRequest) Reset()         { *m = RenewRequest{} }
func (m *RenewRequest) String() string { return proto.CompactTextString(m) }
func (*RenewRequest) ProtoMessage()    {}
func (*RenewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{3}
}

func (m *RenewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewRequest.Unmarshal(m, b)
}
func (m *RenewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewRequest.Marshal(b, m, deterministic)
}
func (m *RenewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewRequest.Merge(m, src)
}
func (m *RenewRequest) XXX_Size() int {
	return xxx_messageInfo_RenewRequest.Size(m)
}
func (m *RenewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenewRequest proto.InternalMessageInfo

func (m *RenewRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *RenewRequest) GetHandleId() []byte {
	if m != nil {
		return m.HandleId
	}
	return nil
}

func (m *RenewRequest) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *RenewRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type RenewResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenewResponse) Reset()         { *m = RenewResponse{} }
func (m *RenewResponse) String() string { return proto.CompactTextString(m) }
func (*RenewResponse) ProtoMessage()    {}
func (*RenewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{4}
}

func (m *RenewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenewResponse.Unmarshal(m, b)
}
func (m *RenewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenewResponse.Marshal(b, m, deterministic)
}
func (m *RenewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenewResponse.Merge(m, src)
}
func (m *RenewResponse) XXX_Size() int {
	return xxx_messageInfo_RenewResponse.Size(m)
}
func (m *RenewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenewResponse proto.InternalMessageInfo

type DoneRequest struct {
	// Owner identifier.
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Handle identifier.
	HandleId []byte `protobuf:"bytes,2,opt,name=handle_id,json=handleId,proto3" json:"handle_id,omitempty"`
	// Optional metadata.
	Metadata             map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DoneRequest) Reset()         { *m = DoneRequest{} }
func (m *DoneRequest) String() string { return proto.CompactTextString(m) }
func (*DoneRequest) ProtoMessage()    {}
func (*DoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{5}
}

func (m *DoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoneRequest.Unmarshal(m, b)
}
func (m *DoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoneRequest.Marshal(b, m, deterministic)
}
func (m *DoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoneRequest.Merge(m, src)
}
func (m *DoneRequest) XXX_Size() int {
	return xxx_messageInfo_DoneRequest.Size(m)
}
func (m *DoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoneRequest proto.InternalMessageInfo

func (m *DoneRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *DoneRequest) GetHandleId() []byte {
	if m != nil {
		return m.HandleId
	}
	return nil
}

func (m *DoneRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DoneResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoneResponse) Reset()         { *m = DoneResponse{} }
func (m *DoneResponse) String() string { return proto.CompactTextString(m) }
func (*DoneResponse) ProtoMessage()    {}
func (*DoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{6}
}

func (m *DoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoneResponse.Unmarshal(m, b)
}
func (m *DoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoneResponse.Marshal(b, m, deterministic)
}
func (m *DoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoneResponse.Merge(m, src)
}
func (m *DoneResponse) XXX_Size() int {
	return xxx_messageInfo_DoneResponse.Size(m)
}
func (m *DoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DoneResponse proto.InternalMessageInfo

type ListRequest struct {
	// Filter object.
	Filter *ListRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Skip the first N records.
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{7}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetFilter() *ListRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListRequest_Filter struct {
	// Namespace prefix.
	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Only certain status.
	Status ListRequest_Filter_Status `protobuf:"varint,2,opt,name=status,proto3,enum=blacksquaremedia.accord.ListRequest_Filter_Status" json:"status,omitempty"`
	// Filter by metadata.
	Metadata             map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListRequest_Filter) Reset()         { *m = ListRequest_Filter{} }
func (m *ListRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListRequest_Filter) ProtoMessage()    {}
func (*ListRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_7aece7290c8dae39, []int{7, 0}
}

func (m *ListRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest_Filter.Unmarshal(m, b)
}
func (m *ListRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest_Filter.Merge(m, src)
}
func (m *ListRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListRequest_Filter.Size(m)
}
func (m *ListRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest_Filter proto.InternalMessageInfo

func (m *ListRequest_Filter) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ListRequest_Filter) GetStatus() ListRequest_Filter_Status {
	if m != nil {
		return m.Status
	}
	return ListRequest_Filter_ALL
}

func (m *ListRequest_Filter) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterEnum("blacksquaremedia.accord.Status", Status_name, Status_value)
	proto.RegisterEnum("blacksquaremedia.accord.ListRequest_Filter_Status", ListRequest_Filter_Status_name, ListRequest_Filter_Status_value)
	proto.RegisterType((*Handle)(nil), "blacksquaremedia.accord.Handle")
	proto.RegisterMapType((map[string]string)(nil), "blacksquaremedia.accord.Handle.MetadataEntry")
	proto.RegisterType((*AcquireRequest)(nil), "blacksquaremedia.accord.AcquireRequest")
	proto.RegisterMapType((map[string]string)(nil), "blacksquaremedia.accord.AcquireRequest.MetadataEntry")
	proto.RegisterType((*AcquireResponse)(nil), "blacksquaremedia.accord.AcquireResponse")
	proto.RegisterType((*RenewRequest)(nil), "blacksquaremedia.accord.RenewRequest")
	proto.RegisterMapType((map[string]string)(nil), "blacksquaremedia.accord.RenewRequest.MetadataEntry")
	proto.RegisterType((*RenewResponse)(nil), "blacksquaremedia.accord.RenewResponse")
	proto.RegisterType((*DoneRequest)(nil), "blacksquaremedia.accord.DoneRequest")
	proto.RegisterMapType((map[string]string)(nil), "blacksquaremedia.accord.DoneRequest.MetadataEntry")
	proto.RegisterType((*DoneResponse)(nil), "blacksquaremedia.accord.DoneResponse")
	proto.RegisterType((*ListRequest)(nil), "blacksquaremedia.accord.ListRequest")
	proto.RegisterType((*ListRequest_Filter)(nil), "blacksquaremedia.accord.ListRequest.Filter")
	proto.RegisterMapType((map[string]string)(nil), "blacksquaremedia.accord.ListRequest.Filter.MetadataEntry")
}

func init() { proto.RegisterFile("rpc/accord.proto", fileDescriptor_7aece7290c8dae39) }

var fileDescriptor_7aece7290c8dae39 = []byte{
	// 658 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x6e, 0xd3, 0x3e,
	0x14, 0xff, 0xc7, 0x49, 0xd3, 0xf6, 0xa4, 0xed, 0x22, 0xeb, 0x2f, 0x56, 0x0a, 0x12, 0xa5, 0xda,
	0x20, 0x02, 0x51, 0xa0, 0x13, 0xe2, 0xeb, 0x6a, 0xa2, 0x1d, 0x1b, 0x94, 0x16, 0x3c, 0xd8, 0x15,
	0xd2, 0xe4, 0x35, 0xae, 0x88, 0xd6, 0x7c, 0x2c, 0x71, 0xd8, 0x76, 0xcd, 0x43, 0xf0, 0x0c, 0xf0,
	0x2e, 0xbc, 0x03, 0xbc, 0x06, 0x57, 0x28, 0x8e, 0xd7, 0x65, 0xa0, 0xac, 0x1d, 0xa8, 0x57, 0xf1,
	0xf1, 0xf9, 0x9d, 0x8f, 0xdf, 0xef, 0xd8, 0x0e, 0x98, 0x61, 0x30, 0xba, 0x4b, 0x47, 0x23, 0x3f,
	0xb4, 0xdb, 0x41, 0xe8, 0x73, 0x1f, 0x2f, 0xef, 0x4d, 0xe8, 0x68, 0x3f, 0x3a, 0x88, 0x69, 0xc8,
	0x5c, 0x66, 0x3b, 0xb4, 0x9d, 0xba, 0x5b, 0x5f, 0x10, 0xe8, 0x9b, 0xd4, 0xb3, 0x27, 0x0c, 0xd7,
	0x00, 0x39, 0x76, 0x5d, 0x69, 0x2a, 0x56, 0x85, 0x20, 0xc7, 0xc6, 0x18, 0x34, 0x8f, 0xba, 0xac,
	0x8e, 0x9a, 0x8a, 0x55, 0x26, 0x62, 0x8d, 0xaf, 0x42, 0x39, 0xf9, 0x46, 0x01, 0x1d, 0xb1, 0xba,
	0x2a, 0x1c, 0xa7, 0x1b, 0x78, 0x19, 0x8a, 0xec, 0x28, 0xd8, 0xe5, 0x6e, 0x54, 0xd7, 0x9a, 0x8a,
	0xa5, 0x12, 0x9d, 0x1d, 0x05, 0x6f, 0xdd, 0x08, 0x5f, 0x86, 0x92, 0xed, 0x7b, 0x4c, 0x78, 0x0a,
	0xc2, 0x53, 0x4c, 0xec, 0xc4, 0x75, 0x1d, 0x2a, 0x5e, 0xec, 0xee, 0xd2, 0xd1, 0x41, 0xec, 0x84,
	0xcc, 0xae, 0xeb, 0x4d, 0xc5, 0xaa, 0x12, 0xc3, 0x8b, 0xdd, 0x75, 0xb9, 0x85, 0xb7, 0xa0, 0xe4,
	0x32, 0x4e, 0x6d, 0xca, 0x69, 0xbd, 0xd4, 0x54, 0x2d, 0xa3, 0x73, 0xa7, 0x9d, 0xc3, 0xa7, 0x9d,
	0x72, 0x69, 0xbf, 0x92, 0xf8, 0x9e, 0xc7, 0xc3, 0x63, 0x32, 0x0d, 0x6f, 0x3c, 0x85, 0xea, 0x19,
	0x17, 0x36, 0x41, 0xdd, 0x67, 0xc7, 0x82, 0x75, 0x99, 0x24, 0x4b, 0xfc, 0x3f, 0x14, 0x3e, 0xd2,
	0x49, 0x7c, 0xc2, 0x3b, 0x35, 0x9e, 0xa0, 0x47, 0x4a, 0xeb, 0xa7, 0x02, 0x35, 0xd9, 0x14, 0x61,
	0x07, 0x31, 0x8b, 0x78, 0x02, 0xf6, 0x0f, 0x3d, 0x16, 0xca, 0x04, 0xa9, 0xf1, 0x17, 0xca, 0x99,
	0xa0, 0x72, 0x3e, 0x11, 0xaa, 0x55, 0x49, 0xb2, 0xc4, 0x6f, 0x32, 0xa4, 0x0b, 0x82, 0xf4, 0x83,
	0x5c, 0xd2, 0x67, 0x9b, 0x5a, 0x0c, 0xf9, 0x4f, 0x0a, 0x2c, 0x4d, 0xeb, 0x44, 0x81, 0xef, 0x45,
	0x0c, 0x3f, 0x04, 0x3d, 0xe2, 0x94, 0xc7, 0x91, 0x48, 0x51, 0xeb, 0x5c, 0xcb, 0xed, 0x70, 0x5b,
	0xc0, 0x88, 0x84, 0x27, 0x81, 0x1f, 0xc4, 0xa0, 0x44, 0x1d, 0xe3, 0x9c, 0xc0, 0x74, 0x9e, 0x44,
	0xc2, 0x5b, 0x3f, 0x14, 0xa8, 0x10, 0xe6, 0xb1, 0xc3, 0xf3, 0x07, 0x70, 0x05, 0xca, 0x69, 0xc0,
	0xae, 0x63, 0x8b, 0x12, 0x15, 0x52, 0x4a, 0x37, 0xb6, 0xec, 0x13, 0xad, 0xd5, 0x53, 0xad, 0x87,
	0x19, 0xad, 0x35, 0xa1, 0xf5, 0x5a, 0x6e, 0x43, 0xd9, 0xea, 0x8b, 0x51, 0x7a, 0x09, 0xaa, 0xb2,
	0x48, 0x2a, 0x73, 0xeb, 0x9b, 0x02, 0x46, 0xd7, 0xf7, 0xd8, 0x3f, 0x70, 0x1e, 0x64, 0x18, 0xaa,
	0x82, 0x61, 0x27, 0x97, 0x61, 0xa6, 0xd4, 0x62, 0x08, 0xd6, 0xa0, 0x92, 0xd6, 0x90, 0xfc, 0x3e,
	0xab, 0x60, 0xf4, 0x9d, 0x88, 0x9f, 0xf0, 0x7b, 0x06, 0xfa, 0xd8, 0x99, 0x70, 0x49, 0xd0, 0xe8,
	0xdc, 0xce, 0x6d, 0x35, 0x13, 0xd5, 0xde, 0x10, 0x21, 0x44, 0x86, 0xe2, 0x4b, 0xa0, 0xfb, 0xe3,
	0x71, 0xc4, 0xb8, 0xa8, 0xaf, 0x11, 0x69, 0x35, 0xbe, 0x22, 0xd0, 0x37, 0xa6, 0x90, 0x20, 0x64,
	0x63, 0xe7, 0x48, 0xb6, 0x2d, 0x2d, 0xfc, 0x62, 0x7a, 0xac, 0x91, 0x38, 0xd6, 0x9d, 0x0b, 0xd4,
	0xff, 0xfd, 0xa4, 0xbf, 0xfb, 0x43, 0xf8, 0xc7, 0x17, 0xc9, 0xb6, 0x10, 0xfd, 0x2d, 0xd0, 0xd3,
	0x2e, 0x71, 0x11, 0xd4, 0xf5, 0x7e, 0xdf, 0xfc, 0x0f, 0x97, 0x40, 0xeb, 0x0e, 0x07, 0x3d, 0x53,
	0xc1, 0x06, 0x14, 0x5f, 0xf7, 0x06, 0xdd, 0xad, 0xc1, 0x73, 0x13, 0xdd, 0x5a, 0x99, 0x22, 0x75,
	0x40, 0xc3, 0x97, 0x67, 0x80, 0x25, 0xd0, 0x36, 0x7b, 0xfd, 0xae, 0x89, 0x3a, 0xdf, 0x11, 0xa0,
	0x9d, 0xfb, 0xf8, 0x3d, 0x14, 0xe5, 0x03, 0x81, 0x6f, 0xce, 0xf9, 0x54, 0x35, 0xac, 0xd9, 0x40,
	0xf9, 0xd6, 0xec, 0x40, 0x41, 0xdc, 0x0a, 0xbc, 0x3a, 0xd7, 0xd5, 0x6c, 0xdc, 0x98, 0x05, 0x93,
	0x79, 0xb7, 0x41, 0x4b, 0x0e, 0x23, 0x5e, 0x99, 0xe7, 0x3e, 0x34, 0x56, 0x67, 0xa0, 0x64, 0xd2,
	0x21, 0x68, 0xc9, 0x30, 0xcf, 0x49, 0x9a, 0x99, 0x75, 0x63, 0xd6, 0xeb, 0x77, 0x4f, 0xd9, 0xd3,
	0xc5, 0x6f, 0x7c, 0xed, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xbb, 0xe9, 0x1b, 0xda, 0x07,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// V1Client is the client API for V1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type V1Client interface {
	// Acquire requests resource handle.
	Acquire(ctx context.Context, in *AcquireRequest, opts ...grpc.CallOption) (*AcquireResponse, error)
	// Renew renews resource handle.
	Renew(ctx context.Context, in *RenewRequest, opts ...grpc.CallOption) (*RenewResponse, error)
	// Done marks an handle as completed.
	Done(ctx context.Context, in *DoneRequest, opts ...grpc.CallOption) (*DoneResponse, error)
	// List streams handles that are done.
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (V1_ListClient, error)
}

type v1Client struct {
	cc *grpc.ClientConn
}

func NewV1Client(cc *grpc.ClientConn) V1Client {
	return &v1Client{cc}
}

func (c *v1Client) Acquire(ctx context.Context, in *AcquireRequest, opts ...grpc.CallOption) (*AcquireResponse, error) {
	out := new(AcquireResponse)
	err := c.cc.Invoke(ctx, "/blacksquaremedia.accord.V1/Acquire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1Client) Renew(ctx context.Context, in *RenewRequest, opts ...grpc.CallOption) (*RenewResponse, error) {
	out := new(RenewResponse)
	err := c.cc.Invoke(ctx, "/blacksquaremedia.accord.V1/Renew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1Client) Done(ctx context.Context, in *DoneRequest, opts ...grpc.CallOption) (*DoneResponse, error) {
	out := new(DoneResponse)
	err := c.cc.Invoke(ctx, "/blacksquaremedia.accord.V1/Done", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1Client) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (V1_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_V1_serviceDesc.Streams[0], "/blacksquaremedia.accord.V1/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &v1ListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type V1_ListClient interface {
	Recv() (*Handle, error)
	grpc.ClientStream
}

type v1ListClient struct {
	grpc.ClientStream
}

func (x *v1ListClient) Recv() (*Handle, error) {
	m := new(Handle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// V1Server is the server API for V1 service.
type V1Server interface {
	// Acquire requests resource handle.
	Acquire(context.Context, *AcquireRequest) (*AcquireResponse, error)
	// Renew renews resource handle.
	Renew(context.Context, *RenewRequest) (*RenewResponse, error)
	// Done marks an handle as completed.
	Done(context.Context, *DoneRequest) (*DoneResponse, error)
	// List streams handles that are done.
	List(*ListRequest, V1_ListServer) error
}

// UnimplementedV1Server can be embedded to have forward compatible implementations.
type UnimplementedV1Server struct {
}

func (*UnimplementedV1Server) Acquire(ctx context.Context, req *AcquireRequest) (*AcquireResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Acquire not implemented")
}
func (*UnimplementedV1Server) Renew(ctx context.Context, req *RenewRequest) (*RenewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Renew not implemented")
}
func (*UnimplementedV1Server) Done(ctx context.Context, req *DoneRequest) (*DoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Done not implemented")
}
func (*UnimplementedV1Server) List(req *ListRequest, srv V1_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterV1Server(s *grpc.Server, srv V1Server) {
	s.RegisterService(&_V1_serviceDesc, srv)
}

func _V1_Acquire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1Server).Acquire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blacksquaremedia.accord.V1/Acquire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1Server).Acquire(ctx, req.(*AcquireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1_Renew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1Server).Renew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blacksquaremedia.accord.V1/Renew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1Server).Renew(ctx, req.(*RenewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1_Done_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1Server).Done(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blacksquaremedia.accord.V1/Done",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1Server).Done(ctx, req.(*DoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(V1Server).List(m, &v1ListServer{stream})
}

type V1_ListServer interface {
	Send(*Handle) error
	grpc.ServerStream
}

type v1ListServer struct {
	grpc.ServerStream
}

func (x *v1ListServer) Send(m *Handle) error {
	return x.ServerStream.SendMsg(m)
}

var _V1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blacksquaremedia.accord.V1",
	HandlerType: (*V1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Acquire",
			Handler:    _V1_Acquire_Handler,
		},
		{
			MethodName: "Renew",
			Handler:    _V1_Renew_Handler,
		},
		{
			MethodName: "Done",
			Handler:    _V1_Done_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _V1_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc/accord.proto",
}
